version: "3"

networks:
  mynet:
      name: ${NETWORK}
services:

  nginx:
    image: nginx:stable-alpine
    container_name: ${PROJECT_NAME}_nginx
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ${PROJECT_PATH}:${WORKING_DIR}
      - ${NGINX_CONF_PATH}:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - mysql
    networks:
      - mynet

  php:
    build:
      context: .
      dockerfile: dockerfile
    container_name: ${PROJECT_NAME}_php
    volumes:
      - ${PROJECT_PATH}:${WORKING_DIR}
    ports:
      - "${PHP_PORT}:9000"
    networks:
      - mynet

  mysql:
    image: mysql:latest
    container_name: ${PROJECT_NAME}_mysql
    restart: unless-stopped
    tty: true
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - ${MYSQL_PERSIST_PATH}:/var/lib/mysql
    environment:
      MYSQL_DATABASE: ${MYSQL_DB}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - mynet

  composer:
    image: composer
    container_name: ${PROJECT_NAME}_composer
    volumes:
      - ${PROJECT_PATH}:${WORKING_DIR}
    working_dir: ${WORKING_DIR}
    entrypoint: ['composer','--ignore-platform-reqs']
    depends_on:
      - php
    networks:
      - mynet

  npm:
    image: node:latest
    container_name: ${PROJECT_NAME}_npm
    volumes:
      - ${PROJECT_PATH}:${WORKING_DIR}
    working_dir: ${WORKING_DIR}
    entrypoint: ["npm"]

  artisan:
    build:
      context: .
      dockerfile: dockerfile
    container_name: ${PROJECT_NAME}_artisan
    volumes:
      - ${PROJECT_PATH}:${WORKING_DIR}
    depends_on:
      - mysql
      - php
    working_dir: ${WORKING_DIR}
    entrypoint: ['php', '${WORKING_DIR}/artisan']
    networks:
      - mynet

  redis:
    image: redis:alpine
    container_name: ${PROJECT_NAME}_redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - ${REDIS_PORT}:6379
    networks:
      - mynet

  phpmyadmin:
    image: phpmyadmin
    container_name: ${PROJECT_NAME}_phpmyadmin
    restart: always
    links:
      - mysql
    ports:
      - ${PHPMYADMIN_PORT}:80
    environment:
      PMA_ARBITRARY: 1
      PMA_USER": ${PHPMYADMIN_USER}
      PMA_PASSWORD: ${PHPMYADMIN_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      PMA_HOST: mysql
      PMA_PORT: 3306
      UPLOAD_LIMIT: 300M
    networks:
      - mynet

  phpredisadmin:
    image: erikdubbelboer/phpredisadmin
    container_name:  ${PROJECT_NAME}_redisManager
    depends_on:
      - redis
    environment:
      - ADMIN_USER=${REDISMANAGER_USER}
      - ADMIN_PASS=${REDISMANAGER_PASSWORD}
      - REDIS_1_HOST=redis
      - REDIS_1_PORT=6379
      - REDIS_1_AUTH=${REDIS_PASSWORD}
    links:
      - redis
    ports:
      - "${REDISMANAGER_PORT}:80"
    networks:
      - mynet


